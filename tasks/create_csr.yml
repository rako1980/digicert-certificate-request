---
- assert:
    that:
      - common_name is defined
      - certificate_store_directory is defined
      - certificate_csr is defined

- name: Convert the wildcard cert name to star to be used in dir and file names.
  set_fact:
    common_name_filename: "{{ common_name | replace('*','star') }}"

- name: ensure the private key exists for {{ common_name }}
  stat:
    path: "{{ certificate_store_directory }}/{{ common_name_filename }}.key"
  register: check_private_key

- name: fail if private key does not exists
  fail:
    msg: "ERROR - {{ certificate_store_directory }}/{{ common_name_filename }}.key does no exists!"
  when: not check_private_key.stat.exists

- name: Generate a CSR
  openssl_csr:
    path: "{{ certificate_store_directory }}/{{ common_name_filename }}.csr"
    privatekey_path: "{{ certificate_store_directory }}/{{ common_name_filename }}.key"
    force: yes
    backup: yes
    country_name: "{{ certificate_csr.country_name }}"
    locality_name: "{{ certificate_csr.locality_name }}"
    state_or_province_name: "{{ certificate_csr.state_or_province_name }}"
    organization_name: "{{ certificate_csr.organization_name }}"
    organizational_unit_name: "{{ certificate_csr.organizational_unit_name }}"
    email_address: "{{ certificate_csr.email_address }}"
  become: yes
